include(CMakeParseArguments)

add_custom_target(all-plot)
add_custom_target(all-data)
add_dependencies(all-plot all-data)

function(add_benchmark SHOOTOUT_DRIVER_NAME SHOOTOUT_TEST_NAME)
  set(SHOOTOUT_ARGS_FLAGS       )
  set(SHOOTOUT_ARGS_ONE_VALUE   )
  set(SHOOTOUT_ARGS_MULTI_VALUE LIBRARIES)
  cmake_parse_arguments(SHOOTOUT "${SHOOTOUT_ARGS_FLAGS}" "${SHOOTOUT_ARGS_ONE_VALUE}" "${SHOOTOUT_ARGS_MULTI_VALUE}" ${ARGN} )

  set(SHOOTOUT_BENCHMARK_NAME  ${SHOOTOUT_DRIVER_NAME}-${SHOOTOUT_TEST_NAME})
  set(SHOOTOUT_PLOTTING_NAME   plot-${SHOOTOUT_BENCHMARK_NAME})

  add_library(${SHOOTOUT_BENCHMARK_NAME} SHARED src/test/${SHOOTOUT_DRIVER_NAME}/${SHOOTOUT_TEST_NAME}.cpp)
  target_link_libraries(${SHOOTOUT_BENCHMARK_NAME} ${SHOOTOUT_LIBRARIES})

  set(SHOOTOUT_EXECUTABLE_NAME measure-${SHOOTOUT_DRIVER_NAME})
  if(NOT TARGET ${SHOOTOUT_EXECUTABLE_NAME})
    add_executable(${SHOOTOUT_EXECUTABLE_NAME} src/driver/measure-${SHOOTOUT_DRIVER_NAME}.cpp)
    target_link_libraries(${SHOOTOUT_EXECUTABLE_NAME} noisy-common ${SHOOTOUT_DRIVER_NAME}-empty)
  endif()
endfunction()

function(add_plot SHOOTOUT_DRIVER_NAME SHOOTOUT_TEST_NAME SHOOTOUT_PLOT_NAME)
  set(SHOOTOUT_ARGS_FLAGS       )
  set(SHOOTOUT_ARGS_ONE_VALUE   SCENARIO_NAME STEP_NAME ITERATIONS)
  set(SHOOTOUT_ARGS_MULTI_VALUE )
  cmake_parse_arguments(SHOOTOUT "${SHOOTOUT_ARGS_FLAGS}" "${SHOOTOUT_ARGS_ONE_VALUE}" "${SHOOTOUT_ARGS_MULTI_VALUE}" ${ARGN} )

  set(SHOOTOUT_BENCHMARK_NAME  ${SHOOTOUT_DRIVER_NAME}-${SHOOTOUT_TEST_NAME})

  if(SHOOTOUT_SCENARIO_NAME)
    set(SHOOTOUT_BENCHMARK_NAME ${SHOOTOUT_BENCHMARK_NAME}-${SHOOTOUT_SCENARIO_NAME})
  endif()

  if(SHOOTOUT_STEP_NAME)
    set(SHOOTOUT_STEP_NAME -${SHOOTOUT_STEP_NAME})
  else()
    set(SHOOTOUT_STEP_NAME "")
  endif()

  if(NOT SHOOTOUT_ITERATIONS)
    set(SHOOTOUT_ITERATIONS 500000)
  endif()

  file(MAKE_DIRECTORY
    ${CMAKE_CURRENT_BINARY_DIR}/data
    ${CMAKE_CURRENT_BINARY_DIR}/plot
    ${CMAKE_CURRENT_BINARY_DIR}/result
  )

  set(SHOOTOUT_DATA_NAME       data-${SHOOTOUT_BENCHMARK_NAME})

  set(SHOOTOUT_EXECUTABLE_NAME measure-${SHOOTOUT_DRIVER_NAME})
  if(NOT TARGET ${SHOOTOUT_DATA_NAME})
    add_custom_target(${SHOOTOUT_DATA_NAME}
      COMMAND sudo nice -n-20 ionice -c1 -n0 taskset -c 1 sudo -u $ENV{USER} LD_PRELOAD=lib/lib${SHOOTOUT_DRIVER_NAME}-${SHOOTOUT_TEST_NAME}.so bin/${SHOOTOUT_EXECUTABLE_NAME} data/${SHOOTOUT_BENCHMARK_NAME} ${SHOOTOUT_ITERATIONS} ${SHOOTOUT_SCENARIO_NAME}
    )
    add_dependencies(${SHOOTOUT_DATA_NAME} ${SHOOTOUT_EXECUTABLE_NAME})
    add_dependencies(all-data ${SHOOTOUT_DATA_NAME})
  endif()

  set(SHOOTOUT_BENCHMARK_NAME  ${SHOOTOUT_BENCHMARK_NAME}${SHOOTOUT_STEP_NAME})
  set(SHOOTOUT_PLOTTING_NAME   plot-${SHOOTOUT_BENCHMARK_NAME})

  set(SHOOTOUT_PLOT_MAX_X  ${SHOOTOUT_ITERATIONS})
  set(SHOOTOUT_PLOT_SOURCE plot/${SHOOTOUT_BENCHMARK_NAME}.plot)
  set(SHOOTOUT_PLOT_DATA   data/${SHOOTOUT_BENCHMARK_NAME}.dat)
  set(SHOOTOUT_PLOT_OUTPUT result/${SHOOTOUT_BENCHMARK_NAME}.png)
  configure_file(src/plot/${SHOOTOUT_PLOT_NAME}.plot.in ${SHOOTOUT_PLOT_SOURCE} @ONLY)

  add_custom_target(${SHOOTOUT_PLOTTING_NAME}
    COMMAND gnuplot ${SHOOTOUT_PLOT_SOURCE}
  )
  add_dependencies(${SHOOTOUT_PLOTTING_NAME} ${SHOOTOUT_DATA_NAME})
  add_dependencies(all-plot ${SHOOTOUT_PLOTTING_NAME})
endfunction()

function(add_plots SHOOTOUT_DRIVER_NAME SHOOTOUT_TEST_NAME SHOOTOUT_PLOT_NAME)
  set(SHOOTOUT_ARGS_FLAGS       )
  set(SHOOTOUT_ARGS_ONE_VALUE   ITERATIONS)
  set(SHOOTOUT_ARGS_MULTI_VALUE SCENARIOS STEPS)
  cmake_parse_arguments(SHOOTOUT "${SHOOTOUT_ARGS_FLAGS}" "${SHOOTOUT_ARGS_ONE_VALUE}" "${SHOOTOUT_ARGS_MULTI_VALUE}" ${ARGN} )

  if(NOT SHOOTOUT_SCENARIOS)
    set(SHOOTOUT_SCENARIOS "SCENARIO-NOTFOUND")
  endif()

  if(NOT SHOOTOUT_STEPS)
    set(SHOOTOUT_STEPS "STEP-NOTFOUND")
  endif()

  if(NOT SHOOTOUT_ITERATIONS)
    set(SHOOTOUT_ITERATIONS "ITERATIONS-NOTFOUND")
  endif()

  foreach(SHOOTOUT_SCENARIO IN LISTS SHOOTOUT_SCENARIOS)
    foreach(SHOOTOUT_STEP IN LISTS SHOOTOUT_STEPS)
      add_plot(${SHOOTOUT_DRIVER_NAME} ${SHOOTOUT_TEST_NAME} ${SHOOTOUT_PLOT_NAME} ITERATIONS ${SHOOTOUT_ITERATIONS} STEP_NAME ${SHOOTOUT_STEP} SCENARIO_NAME ${SHOOTOUT_SCENARIO})
    endforeach()
  endforeach()
endfunction()
